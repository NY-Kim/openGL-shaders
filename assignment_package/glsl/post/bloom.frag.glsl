#version 150

in vec2 fs_UV;

out vec3 color;

uniform sampler2D u_RenderedTexture;
uniform int u_Time;
uniform ivec2 u_Dimensions;

void main()
{
    float kernel[121] = float[](0.006849, 0.007239, 0.007559, 0.007795, 0.007941, 0.007990, 0.007941, 0.007795, 0.007559, 0.007239, 0.006849,
                                0.007239, 0.007653, 0.007990, 0.008240, 0.008394, 0.008446, 0.008394, 0.008240, 0.007990, 0.007653, 0.007239,
                                0.007559, 0.007990, 0.008342, 0.008604, 0.008764, 0.008819, 0.008764, 0.008604, 0.008342, 0.007990, 0.007559,
                                0.007795, 0.008240, 0.008604, 0.008873, 0.009039, 0.009095, 0.009039, 0.008873, 0.008604, 0.008240, 0.007795,
                                0.007941, 0.008394, 0.008764, 0.009039, 0.009208, 0.009265, 0.009208, 0.009039, 0.008764, 0.008394, 0.007941,
                                0.007990, 0.008446, 0.008819, 0.009095, 0.009265, 0.009322, 0.009265, 0.009095, 0.008819, 0.008446, 0.007990,
                                0.007941, 0.008394, 0.008764, 0.009039, 0.009208, 0.009265, 0.009208, 0.009039, 0.008764, 0.008394, 0.007941,
                                0.007795, 0.008240, 0.008604, 0.008873, 0.009039, 0.009095, 0.009039, 0.008873, 0.008604, 0.008240, 0.007795,
                                0.007559, 0.007990, 0.008342, 0.008604, 0.008764, 0.008819, 0.008764, 0.008604, 0.008342, 0.007990, 0.007559,
                                0.007239, 0.007653, 0.007990, 0.008240, 0.008394, 0.008446, 0.008394, 0.008240, 0.007990, 0.007653, 0.007239,
                                0.006849, 0.007239, 0.007559, 0.007795, 0.007941, 0.007990, 0.007941, 0.007795, 0.007559, 0.007239, 0.006849);

    color = vec3(texture(u_RenderedTexture, fs_UV));
    for (int i = 0; i < 11; i++)
    {
        for (int j = 0; j < 11; j++)
        {
            vec2 uv = fs_UV + vec2((i - 5) * 1.0 / u_Dimensions[0], (j - 5) * 1.0 / u_Dimensions[1]);
            vec4 col = texture(u_RenderedTexture, uv);
            float luminance = col.r * 0.21 + col.g * 0.72 + col.b * 0.07;
            if (luminance > 0.3) {
                color += kernel[i + 11 * j] * vec3(col);
            }
        }
    }
}
